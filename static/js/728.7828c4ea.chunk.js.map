{"version":3,"file":"static/js/728.7828c4ea.chunk.js","mappings":"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","sources":["components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\n\r\nconst RandomChar = () => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    const timerId = setInterval(updateChar, 60000);\r\n\r\n    return () => {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character of the today!\r\n          <br />\r\n          Want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button onClick={updateChar} className=\"button button__main\">\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage } = char;\r\n\r\n  const imgStyle =\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ? { objectFit: \"contain\" }\r\n      : { objectFit: \"cover\" };\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className=\"randomchar__img\"\r\n        style={imgStyle}\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport \"./charList.scss\";\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(291);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n  const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllCharacters(offset).then(onCharListLoaded);\r\n  };\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList((charList) => [...charList, ...newCharList]);\r\n    setNewItemLoading(false);\r\n    setOffset((offset) => offset + 9);\r\n    setCharEnded(ended);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) =>\r\n      item.classList.remove(\"char__item_selected\")\r\n    );\r\n    itemRefs.current[id].classList.add(\"char__item_selected\");\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      const imgStyle =\r\n        item.thumbnail ===\r\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n          ? { objectFit: \"contain\" }\r\n          : { objectFit: \"cover\" };\r\n\r\n      return (\r\n        <li\r\n          className=\"char__item\"\r\n          tabIndex={0}\r\n          ref={(el) => (itemRefs.current[i] = el)}\r\n          key={item.id}\r\n          onClick={() => {\r\n            props.onCharSelected(item.id);\r\n            focusOnItem(i);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \" \" || e.key === \"Enter\") {\r\n              props.onCharSelected(item.id);\r\n              focusOnItem(i);\r\n            }\r\n          }}\r\n        >\r\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"char__grid\">{items}</ul>;\r\n  }\r\n\r\n  const items = renderItems(charList);\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {items}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nCharList.propTypes = {\r\n  onCharSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = (props) => {\r\n  const [char, setChar] = useState(null);\r\n  const { loading, error, clearError, getCharacter } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n  }, [props.charId]);\r\n\r\n  const updateChar = () => {\r\n    const { charId } = props;\r\n    if (!charId) return;\r\n    clearError();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(error || loading || !char) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"char__info\">\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, comics } = char;\r\n\r\n  const imgStyle =\r\n    thumbnail ===\r\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\r\n      ? { objectFit: \"contain\" }\r\n      : { objectFit: \"cover\" };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      {comics.length === 0 ? (\r\n        <div>There are no comics with this character</div>\r\n      ) : (\r\n        <ul className=\"char__comics-list\">\r\n          {comics\r\n            .map((item, i) => {\r\n              return (\r\n                <li className=\"char__comics-item\" key={i}>\r\n                  <Link to={`/comics/${item.resourceURI.substring(43)}`}>\r\n                    {item.name}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })\r\n            .splice(0, 10)}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["View","char","name","description","thumbnail","homepage","imgStyle","objectFit","className","src","alt","style","href","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","comics","to","resourceURI","substring","splice","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","selectedChar","decoration"],"sourceRoot":""}