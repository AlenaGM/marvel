{"version":3,"file":"static/js/453.edb35ee7.chunk.js","mappings":"wPASMA,EAAa,SAACC,EAASC,EAAWC,GACtC,OAAQF,GACN,IAAK,UACH,OAAO,SAACG,EAAA,EAAD,IACT,IAAK,UACH,OAAOD,GAAiB,SAACD,EAAD,KAAgB,SAACE,EAAA,EAAD,IAC1C,IAAK,YACH,OAAO,SAACF,EAAD,IACT,IAAK,QACH,OAAO,SAACG,EAAA,EAAD,IACT,QACE,MAAM,IAAIC,MAAM,4BAErB,EAoED,EAlEmB,WACjB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOJ,EAAP,KAAuBO,EAAvB,KACA,GAA4BH,EAAAA,EAAAA,UAAS,KAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KAEA,GAA8CC,EAAAA,EAAAA,KAAtCC,EAAR,EAAQA,aAAcf,EAAtB,EAAsBA,QAASgB,EAA/B,EAA+BA,YAE/BC,EAAAA,EAAAA,YAAU,WACRC,EAAUR,GAAQ,EAEnB,GAAE,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACfV,GAAVU,GACAJ,EAAaL,GACVU,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,YAAjB,GACT,EAEKK,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAEVf,EAAc,GAAD,eAAKD,IAAL,OAAoBe,KACjCb,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeU,EAChB,EAsBD,OACE,iBAAKE,UAAU,eAAf,UACG1B,EAAWC,GAAS,kBAtBzB,SAAqB0B,GACnB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GAC3B,OACE,eAAIL,UAAU,eAAd,UACE,UAAC,KAAD,CAAMM,GAAE,kBAAaF,EAAKG,IAA1B,WACE,gBACEC,IAAKJ,EAAKK,UACVC,IAAKN,EAAKO,MACVX,UAAU,sBAEZ,gBAAKA,UAAU,oBAAf,SAAoCI,EAAKO,SACzC,gBAAKX,UAAU,qBAAf,SAAqCI,EAAKQ,YARZP,EAYrC,IAED,OAAO,eAAIL,UAAU,eAAd,SAA8BE,GACtC,CAI8BW,CAAY/B,EAAlB,GAA+BL,IACpD,mBACEqC,SAAUrC,EACVsC,MAAO,CAAEC,QAAS7B,EAAc,OAAS,SACzCa,UAAU,mCACViB,QAAS,kBAAMxB,EAAUR,EAAhB,EAJX,UAME,gBAAKe,UAAU,QAAf,2BAIP,ECtED,EAbmB,WACjB,OACE,iCACE,UAACkB,EAAA,EAAD,YACE,iBAAMC,KAAK,cAAcC,QAAQ,kCACjC,+CAEF,SAACC,EAAA,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./comicsList.scss\";\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Spinner />;\r\n    case \"loading\":\r\n      return newItemLoading ? <Component /> : <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected process state\");\r\n  }\r\n};\r\n\r\nconst ComicsList = () => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(210);\r\n  const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n  const { getAllComics, process, setProcess } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllComics(offset)\r\n      .then(onComicsListLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n\r\n  const onComicsListLoaded = (newComicsList) => {\r\n    let ended = false;\r\n    if (newComicsList.length < 8) {\r\n      ended = true;\r\n    }\r\n    setComicsList([...comicsList, ...newComicsList]);\r\n    setNewItemLoading(false);\r\n    setOffset(offset + 8);\r\n    setComicsEnded(ended);\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      return (\r\n        <li className=\"comics__item\" key={i}>\r\n          <Link to={`/comics/${item.id}`}>\r\n            <img\r\n              src={item.thumbnail}\r\n              alt={item.title}\r\n              className=\"comics__item-img\"\r\n            />\r\n            <div className=\"comics__item-name\">{item.title}</div>\r\n            <div className=\"comics__item-price\">{item.price}</div>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"comics__grid\">{items}</ul>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n      <button\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\r\n        className=\"button button__main button__long\"\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta name=\"description\" content=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","Helmet","name","content","AppBanner"],"sourceRoot":""}